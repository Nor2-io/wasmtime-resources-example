package example:component@0.1.0

/// An example cache interface.
interface cache {
    /// Get a value from the cache.
    get: func(key: string) -> option<list<u8>>

    /// Put a value into the cache.
    put: func(key: string, value: list<u8>)
}

/// An example backend interface.
interface backend {
    /// Fetch the content bytes of the given URL.
    fetch: func(url: string) -> list<u8>
    
    /// A resource containing two scalar fields
    /// that both have the same type
    resource scalars {
        /// constructor
        constructor()
        /// The first field, named a
        get-a: static func() -> u32
        /// The second field, named b
        get-b: func() -> u32

    }

    scalar-arg: func(x: borrow<scalars>) -> u32
}

/// An example world for the component to target.
world example {
    /// The cache to use.
    //import cache

    /// The origin backend to use.
    //import backend

    /// Export the same backend interface as the origin
    export backend
}
